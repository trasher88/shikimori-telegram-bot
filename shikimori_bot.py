from telegram import Update
from config import TOKEN, CHAT_ID
from shikimori_one import ShikimoriParser
from telegram.ext import Application, CommandHandler, ContextTypes

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ø–µ—Ä–µ–Ω–µ—Å –≤ config.py –¥–ª—è GitHub)
CACHE_FILE = 'shikimori_cache.json'  # –§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –ø–∞—Ä—Å–µ—Ä–∞

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
parser = ShikimoriParser()


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üîî –ë–æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –∞–Ω–∏–º–µ —Å Shikimori!\n"
        "–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
    )


async def send_updates(context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
        data = parser.get_data(use_cache=False)  # –í—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ

        if data['status'] != 'success':
            await context.bot.send_message(
                chat_id=CHAT_ID,
                text="‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å Shikimori"
            )
            return

        # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–µ—Ä–∏–∏
        if data.get('episodes'):
            for episode in data['episodes'][:5]:  # –ü–µ—Ä–≤—ã–µ 5 –≤ —Å–ø–∏—Å–∫–µ
                message = (
                    f"üé¨ <b>{episode['title']}</b>\n"
                    f"üìÖ <i>{episode['date']}</i>\n"
                    f"üîπ {episode['episode_info']}"
                )
                await context.bot.send_message(
                    chat_id=CHAT_ID,
                    text=message,
                    parse_mode='HTML'
                )

        # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        if data.get('news'):
            for news in data['news'][:3]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –Ω–æ–≤–æ—Å—Ç–∏
                news_msg = (
                    f"üì¢ <b>{news['title']}</b>\n"
                    f"üìÖ {news['date']}\n"
                    f"{news['content'][:200]}..."  # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
                )
                await context.bot.send_message(
                    chat_id=CHAT_ID,
                    text=news_msg,
                    parse_mode='HTML'
                )

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")


def main() -> None:
    #response = requests.get(f"https://api.telegram.org/bot{TOKEN}/getUpdates").json()
    #print(response)  # –°–∫–æ–ø–∏—Ä—É–π—Ç–µ 'id' –∏–∑ 'chat'

    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
    job_queue = application.job_queue
    job_queue.run_repeating(
        callback=send_updates,
        interval=6 * 3600,  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (6 —á–∞—Å–æ–≤)
        #interval=60, # –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É, –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        first=10  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞
    )

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    application.run_polling()


if __name__ == '__main__':
    main()